{"remainingRequest":"/home/vuanhtu/Desktop/workspace/nodejs/MEVN/proshop/frontend/node_modules/babel-loader/lib/index.js!/home/vuanhtu/Desktop/workspace/nodejs/MEVN/proshop/frontend/src/store/modules/orders.js","dependencies":[{"path":"/home/vuanhtu/Desktop/workspace/nodejs/MEVN/proshop/frontend/src/store/modules/orders.js","mtime":1621152090012},{"path":"/home/vuanhtu/Desktop/workspace/nodejs/MEVN/proshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vuanhtu/Desktop/workspace/nodejs/MEVN/proshop/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/vuanhtu/Desktop/workspace/nodejs/MEVN/proshop/frontend/src/store/modules/orders.js"],"names":["axios","actionHandler","initialSingleOrderState","_id","user","orderItems","shippingAddress","itemsPrice","shippingPrice","taxPrice","totalPrice","state","orders","order","getters","getAllOrders","getSingleOrder","actions","fetchAllOrders","commit","rootState","userId","undefined","get","headers","Authorization","users","loggedUser","token","data","fetchMyOrders","fetchSingleOrder","orderId","createOrder","cartSummary","cart","items","paymentMethod","post","payOrder","details","id","status","updateTime","update_time","emailAddress","payer","email_address","put","paypalClientId","mutations","resetAllOrders","setAllOrders","resetSingleOrder","setSingleOrder","Object","keys","forEach","key"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport actionHandler from '../actionHandler'\n\nconst initialSingleOrderState = () => ({\n    _id: '',\n    user: '',\n    orderItems: [],\n    shippingAddress: {},\n    itemsPrice: 0,\n    shippingPrice: 0,\n    taxPrice: 0,\n    totalPrice: 0\n})\n\nconst state = {\n    orders: [],\n    order: initialSingleOrderState()\n}\n\nconst getters = {\n    getAllOrders: state => state.orders,\n    getSingleOrder: state => state.order\n}\n\nconst actions = {\n    /*\n     * @desc        Fetch all orders\n     * @access      Admin\n     */\n    fetchAllOrders: actionHandler(async ({ commit, rootState }, userId = undefined) => {\n        commit('resetAllOrders')\n\n        const { data } = await axios.get(`/api${userId ? `/users/${userId}` : ''}/orders`, {\n            headers: { Authorization: `Bearer ${rootState.users.loggedUser.token}` }\n        })\n\n        commit('setAllOrders', data.data)\n    }),\n    \n    /*\n     * @desc        Fetch the logged in user orders\n     * @access      Private\n     */\n    fetchMyOrders: actionHandler(async ({ commit, rootState }) => {\n        commit('resetAllOrders')\n        \n        const { data } = await axios.get('/api/orders/myorders', {\n            headers: { Authorization: `Bearer ${rootState.users.loggedUser.token}` }\n        })\n\n        commit('setAllOrders', data.data)\n    }),\n    \n    /*\n     * @desc        Fetch a user order by id\n     * @access      Private\n     */\n    fetchSingleOrder: actionHandler(async ({ commit, rootState }, orderId) => {\n        commit('resetSingleOrder')\n\n        const { data } = await axios.get(`/api/orders/${orderId}`, {\n            headers: { Authorization: `Bearer ${rootState.users.loggedUser.token}` }\n        })\n\n        commit('setSingleOrder', data.data)\n    }),\n    \n    /*\n     * @desc        Creates a new user order\n     * @access      Private\n     */\n    createOrder: actionHandler(async ({ commit, rootState }, cartSummary) => {\n        const { items: orderItems, shippingAddress, paymentMethod } = rootState.cart\n\n        const { data } = await axios.post('/api/orders', {\n            orderItems,\n            shippingAddress,\n            paymentMethod,\n            ...cartSummary\n        }, {\n            headers: { Authorization: `Bearer ${rootState.users.loggedUser.token}` }\n        })\n\n        commit('setSingleOrder', data.data)\n    }),\n\n    /*\n     * @desc        Update order paid status\n     * @access      Private\n     */\n    payOrder: actionHandler(async ({ commit, rootState }, { orderId, details }) => {\n        const { id, status, update_time: updateTime, payer: { email_address: emailAddress } } = details\n        \n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, {\n            id,\n            status,\n            updateTime,\n            emailAddress\n        }, {\n            headers: { Authorization: `Bearer ${rootState.users.loggedUser.token}` }\n        })\n        \n        commit('setSingleOrder', data.data)\n    }),\n    \n    /*\n     * @desc        Fetch the paypal client id\n     * @access      Private\n     */\n    paypalClientId: actionHandler(async () => {\n        const { data } = await axios.get('/api/config/paypal')\n\n        return data\n    })\n}\n\nconst mutations = {\n    resetAllOrders: state => state.orders = [],\n    setAllOrders: (state, orders) => state.orders = orders,\n    \n    resetSingleOrder: state => state.order = initialSingleOrderState(),\n    setSingleOrder: (state, order) => Object.keys(order).forEach(key => state.order[key] = order[key])\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}\n"]}]}