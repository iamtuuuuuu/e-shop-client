{"remainingRequest":"/home/vuanhtu/Desktop/workspace/nodejs/MEVN/proshop/frontend/node_modules/babel-loader/lib/index.js!/home/vuanhtu/Desktop/workspace/nodejs/MEVN/proshop/frontend/src/store/modules/users.js","dependencies":[{"path":"/home/vuanhtu/Desktop/workspace/nodejs/MEVN/proshop/frontend/src/store/modules/users.js","mtime":1621152090012},{"path":"/home/vuanhtu/Desktop/workspace/nodejs/MEVN/proshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vuanhtu/Desktop/workspace/nodejs/MEVN/proshop/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/vuanhtu/Desktop/workspace/nodejs/MEVN/proshop/frontend/src/store/modules/users.js"],"names":["axios","actionHandler","router","initialUserState","JSON","parse","localStorage","getItem","_id","name","email","isAdmin","createdAt","updatedAt","token","state","loggedUser","userDetails","users","getters","getLoggedUser","getUserDetails","getAllUsers","actions","loginUser","commit","password","post","data","setItem","stringify","user","statePiece","logoutUser","removeItem","push","query","redirect","currentRoute","value","fullPath","slice","registerUser","fetchUserDetails","get","headers","Authorization","updateUserDetails","route","put","fetchAllUsers","deleteUser","userId","dispatch","delete","mutations","resetLoggedUser","resetUserDetails","setUser","Object","keys","forEach","key","resetAllUsers","setAllUsers"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport actionHandler from '../actionHandler'\nimport router from '@/router'\n\nconst initialUserState = () => (JSON.parse(localStorage.getItem('user')) ?? {\n    _id: '',\n    name: '',\n    email: '',\n    isAdmin: false,\n    createdAt: '',\n    updatedAt: '',\n    token: null\n})\n\nconst state = {\n    loggedUser: initialUserState(),\n    userDetails: {},\n\n    users: []\n}\n\nconst getters = {\n    getLoggedUser: state => state.loggedUser,\n    getUserDetails: state => state.userDetails,\n    \n    getAllUsers: state => state.users\n}\n\nconst actions = {\n    /* \n     * @desc        Authenticate user & get token\n     * @access      Public\n     */\n    loginUser: actionHandler(async ({ commit }, { email, password }) => {\n        const { data } = await axios.post('/api/users/login', { email, password })\n\n        localStorage.setItem('user', JSON.stringify(data.data))\n        commit('setUser', { user: data.data, statePiece: 'loggedUser' })\n    }),\n    \n    /* \n     * @desc        Sign out logged user\n     * @access      Private\n     */\n    logoutUser({ commit }) {\n        localStorage.removeItem('user')\n        commit('resetLoggedUser')\n\n        router.push({ name: 'login', query: { redirect: router.currentRoute.value.fullPath.slice(1) } })\n    },\n\n    /* \n     * @desc        Register a new user\n     * @access      Public\n     */\n    registerUser: actionHandler(async ({ commit }, { name, email, password }) => {\n        const { data } = await axios.post('/api/users', { name, email, password })\n\n        localStorage.setItem('user', JSON.stringify(data.data))\n        commit('setUser', { user: data.data, statePiece: 'loggedUser' })\n    }),\n\n    /* \n     * @desc        Get User by id or the logged in\n     * @access      Private || Admin\n     */\n    fetchUserDetails: actionHandler(async ({ commit, state }, user = 'profile') => {\n        commit('resetUserDetails')\n        \n        const { data } = await axios.get(`/api/users/${user}`, {\n            headers: { Authorization: `Bearer ${state.loggedUser.token}` }\n        })\n\n        commit('setUser', { user: data.data, statePiece: 'userDetails' })\n    }),\n    \n    /* \n     * @desc        Update logged in or by id user data\n     * @access      Private || Admin\n     */\n    updateUserDetails: actionHandler(async ({ commit, state }, { user, route = 'profile' }) => {\n        const { name, email, password, isAdmin } = user\n\n        const { data } = await axios.put(`/api/users/${route}`,\n            { name, email, password, isAdmin },\n            { headers: { Authorization: `Bearer ${state.loggedUser.token}` }}\n        )\n\n        if (route === 'profile') {\n            localStorage.setItem('user', JSON.stringify(data.data))\n            commit('setUser', { user: data.data, statePiece: 'loggedUser' })\n        }\n        \n        commit('resetUserDetails')\n        commit('setUser', { user: data.data, statePiece: 'userDetails' })\n    }),\n\n    /* \n     * @desc        Get all registered users\n     * @access      Admin\n     */\n    fetchAllUsers: actionHandler(async ({ commit, state }) => {\n        commit('resetAllUsers')\n        \n        const { data } = await axios.get('/api/users', {\n            headers: { Authorization: `Bearer ${state.loggedUser.token}` }\n        })\n\n        commit('setAllUsers', data.data)\n    }),\n    \n    /* \n     * @desc        Delete user by id\n     * @access      Admin\n     */\n    deleteUser: actionHandler(async ({ dispatch, state }, userId ) => {\n        await axios.delete(`/api/users/${userId}`, {\n            headers: { Authorization: `Bearer ${state.loggedUser.token}` }\n        })\n\n        dispatch('fetchAllUsers')\n    })\n}\n\nconst mutations = {\n    resetLoggedUser: state => state.loggedUser = initialUserState(),\n    resetUserDetails: state => state.userDetails = {},\n    \n    setUser: (state, { user, statePiece }) => Object.keys(user).forEach(key => state[statePiece][key] = user[key]),\n\n    resetAllUsers: state => state.users = [],\n    setAllUsers: (state, users) => state.users = users\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}\n"]}]}