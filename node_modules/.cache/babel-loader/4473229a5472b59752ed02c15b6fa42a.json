{"remainingRequest":"/home/vuanhtu/Desktop/workspace/vue/eshop/frontend/node_modules/babel-loader/lib/index.js!/home/vuanhtu/Desktop/workspace/vue/eshop/frontend/src/store/modules/users.js","dependencies":[{"path":"/home/vuanhtu/Desktop/workspace/vue/eshop/frontend/src/store/modules/users.js","mtime":1622303344641},{"path":"/home/vuanhtu/Desktop/workspace/vue/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vuanhtu/Desktop/workspace/vue/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/vuanhtu/Desktop/workspace/vue/eshop/frontend/src/store/modules/users.js"],"names":["axios","actionHandler","router","initialUserState","JSON","parse","localStorage","getItem","_id","authGoogleID","authFacebookID","authType","street","isAdmin","apartment","city","zip","country","name","email","phone","token","state","loggedUser","userDetails","users","getters","getLoggedUser","getUserDetails","getAllUsers","actions","loginUser","commit","password","post","data","setItem","stringify","user","statePiece","logoutUser","removeItem","push","query","redirect","currentRoute","value","fullPath","slice","registerUser","fetchUserDetails","get","headers","Authorization","updateUserDetails","route","put","fetchAllUsers","deleteUser","userId","dispatch","delete","mutations","resetLoggedUser","resetUserDetails","setUser","Object","keys","forEach","key","resetAllUsers","setAllUsers"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport actionHandler from '../actionHandler'\nimport router from '@/router'\n\nconst initialUserState = () => (JSON.parse(localStorage.getItem('user')) ?? {\n    _id: \"\",\n    authGoogleID: null,\n    authFacebookID: null,\n    authType: \"local\",\n    street: \"\",\n    isAdmin: false,\n    apartment: \"\",\n    city: \"\",\n    zip: \"\",\n    country: \"\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    token: null,\n})\n\nconst state = {\n    loggedUser: initialUserState(),\n    userDetails: {},\n\n    users: []\n}\n\nconst getters = {\n    getLoggedUser: state => state.loggedUser,\n    getUserDetails: state => state.userDetails,\n    \n    getAllUsers: state => state.users\n}\n\nconst actions = {\n    /* \n     * @desc        Authenticate user & get token\n     * @access      Public\n     */\n    loginUser: actionHandler(async ({ commit }, { email, password }) => {\n        const { data } = await axios.post('/users/signin', { email, password })\n\n        localStorage.setItem('user', JSON.stringify(data.data))\n        commit('setUser', { user: data.data, statePiece: 'loggedUser' })\n    }),\n    \n    /* \n     * @desc        Sign out logged user\n     * @access      Private\n     */\n    logoutUser({ commit }) {\n        localStorage.removeItem('user')\n        commit('resetLoggedUser')\n\n        router.push({ name: 'login', query: { redirect: router.currentRoute.value.fullPath.slice(1) } })\n    },\n\n    /* \n     * @desc        Register a new user\n     * @access      Public\n     */\n    registerUser: actionHandler(async ({ commit }, { name, email, phone, password }) => {\n        const { data } = await axios.post('/users/signup', { name, email, phone, password })\n\n        localStorage.setItem('user', JSON.stringify(data.data))\n        commit('setUser', { user: data.data, statePiece: 'loggedUser' })\n    }),\n\n    /* \n     * @desc        Get User by id or the logged in\n     * @access      Private || Admin\n     */\n    fetchUserDetails: actionHandler(async ({ commit, state }, user = 'profile') => {\n        commit('resetUserDetails')\n        \n        const { data } = await axios.get(`/users/${user}`, {\n            headers: { Authorization: `Bearer ${state.loggedUser.token}` }\n        })\n\n        commit('setUser', { user: data.data, statePiece: 'userDetails' })\n    }),\n    \n    /* \n     * @desc        Update logged in or by id user data\n     * @access      Private || Admin\n     */\n    updateUserDetails: actionHandler(async ({ commit, state }, { user, route = 'profile' }) => {\n        const { name, email, password, isAdmin } = user\n\n        const { data } = await axios.put(`/users/${route}`,\n            { name, email, password, isAdmin },\n            { headers: { Authorization: `Bearer ${state.loggedUser.token}` }}\n        )\n\n        if (route === 'profile') {\n            localStorage.setItem('user', JSON.stringify(data.data))\n            commit('setUser', { user: data.data, statePiece: 'loggedUser' })\n        }\n        \n        commit('resetUserDetails')\n        commit('setUser', { user: data.data, statePiece: 'userDetails' })\n    }),\n\n    /* \n     * @desc        Get all registered users\n     * @access      Admin\n     */\n    fetchAllUsers: actionHandler(async ({ commit, state }) => {\n        commit('resetAllUsers')\n        \n        const { data } = await axios.get('/users', {\n            headers: { Authorization: `Bearer ${state.loggedUser.token}` }\n        })\n\n        commit('setAllUsers', data.data)\n    }),\n    \n    /* \n     * @desc        Delete user by id\n     * @access      Admin\n     */\n    deleteUser: actionHandler(async ({ dispatch, state }, userId ) => {\n        await axios.delete(`/users/${userId}`, {\n            headers: { Authorization: `Bearer ${state.loggedUser.token}` }\n        })\n\n        dispatch('fetchAllUsers')\n    })\n}\n\nconst mutations = {\n    resetLoggedUser: state => state.loggedUser = initialUserState(),\n    resetUserDetails: state => state.userDetails = {},\n    \n    setUser: (state, { user, statePiece }) => Object.keys(user).forEach(key => state[statePiece][key] = user[key]),\n\n    resetAllUsers: state => state.users = [],\n    setAllUsers: (state, users) => state.users = users\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}\n"]}]}